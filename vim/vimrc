call plug#begin('~/.vim/plugged')

Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

Plug 'altercation/vim-colors-solarized'
Plug 'ajmwagar/vim-deus'

Plug 'bling/vim-airline'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-unimpaired'
Plug 'tpope/vim-rhubarb'

Plug 'janko/vim-test'
Plug 'benmills/vimux'

Plug 'vim-ruby/vim-ruby'
Plug 'tpope/vim-rails'
Plug 'kana/vim-textobj-user'
Plug 'nelstrom/vim-textobj-rubyblock'

Plug 'jceb/vim-orgmode'

call plug#end()

syntax on
filetype on
filetype plugin on
filetype indent on

set nocompatible
set cindent
set smartindent
set autoindent
set visualbell
set incsearch
set relativenumber
set colorcolumn=121
set re=1

" Show line numbers
set number

" Softtabs, 2 spaces
set tabstop=2
set shiftwidth=2
set expandtab

set ruler
set hlsearch

set clipboard=unnamed

set background=dark
" let g:solarized_visibility = "high"
" let g:solarized_contrast = "high"
" let g:solarized_termcolors = 256
colorscheme deus

" let g:NERDTreeHijackNetrw=0

" autocmd VimEnter * NERDTree
autocmd VimEnter * wincmd p
autocmd BufWritePre * :%s/\s\+$//e
autocmd VimLeave * VtrKillRunner

let g:spec_runner_dispatcher = 'VtrSendCommandToRunner! {command}'

" Leader commands
let mapleader = ","

" vim-test setup
noremap <leader>r :wa<CR>:TestNearest<CR>
noremap <leader>R :wa<CR>:TestFile<CR>
noremap <leader>e :wa<CR>:TestLast<CR>
noremap <leader>E :TestVisit<CR>
let test#strategy = "vimux"

noremap <C-j> <C-w><C-j>
noremap <C-k> <C-w><C-k>
noremap <C-h> <C-w><C-h>
noremap <C-l> <C-w><C-l>

" Convert hash rockets to new syntax
nnoremap <leader>{ :%s/:\([^=,'"]*\) =>/\1:/gc<CR>

" ctrl-p fuzzy find with fzf.vim
nnoremap <C-p> :Files<Cr>
let $FZF_DEFAULT_OPTS = '--bind ctrl-a:select-all'

nmap =j :%!python -m json.tool<CR>
nmap <Space> i_<Esc>r

" From http://robots.thoughtbot.com/faster-grepping-in-vim
if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor
  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

if executable('rg')
  set grepprg=rg\ --vimgrep\ --no-heading
  set grepformat=%f:%l:%c:%m,%f:%l:%m
endif

" bind K to grep word under cursor
nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>

function! QuickFixToggle()
  let curr = winnr()
  for i in range(1, winnr('$'))
    let bnum = winbufnr(i)
    if getbufvar(bnum, '&buftype') == 'quickfix'
      if curr != i
        copen
        return
      endif
      cclose
      return
    endif
  endfor
  copen
endfunction
nnoremap <c-;> :call QuickFixToggle()<cr>

runtime macros/matchit.vim
