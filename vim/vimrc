" pathogen bundles
execute pathogen#infect()
call pathogen#helptags()
syntax on
filetype on
filetype plugin on
filetype indent on

set nocompatible
set cindent
set smartindent
set autoindent
set visualbell
set incsearch
set relativenumber
set colorcolumn=121
set re=1

" Show line numbers
set number

" Softtabs, 2 spaces
set tabstop=2
set shiftwidth=2
set expandtab

set ruler
set hlsearch

set clipboard=unnamed

set background=dark
let g:solarized_visibility = "high"
let g:solarized_contrast = "high"
let g:solarized_termcolors = 256
colorscheme solarized

let g:NERDTreeHijackNetrw=0

autocmd VimEnter * NERDTree
autocmd VimEnter * wincmd p
autocmd BufWritePre * :%s/\s\+$//e
autocmd VimLeave * VtrKillRunner

let g:spec_runner_dispatcher = 'VtrSendCommandToRunner! {command}'

" Leader commands
let mapleader = ","
map <Leader>t :NERDTreeToggle<CR>
map <leader>r <Plug>RunFocusedSpec
map <leader>R <Plug>RunCurrentSpecFile
map <leader>e <Plug>RunMostRecentSpec
map <leader>E :VtrSendCommandToRunner! m<CR>
" Convert hash rockets to new syntax
nnoremap <leader>{ :%s/:\([^=,'"]*\) =>/\1:/gc<CR>

nmap =j :%!python -m json.tool<CR>
nmap <Space> i_<Esc>r

" From http://robots.thoughtbot.com/faster-grepping-in-vim
" The Silver Searcher
if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0

  " bind \ (backward slash) to grep shortcut
  command -nargs=+ -complete=file -bar Ag silent! grep! <args>|cwindow|redraw!
  nnoremap \ :Ag<SPACE>
endif

" bind K to grep word under cursor
nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>
runtime macros/matchit.vim

" ===== Seeing Is Believing =====
" Assumes you have a Ruby with SiB available in the PATH
" If it doesn't work, you may need to `gem install seeing_is_believing -v 3.0.0.beta.6`
" ...yeah, current release is a beta, which won't auto-install

" Annotate every line
nmap <leader>b :%!seeing_is_believing --timeout 12 --line-length 500 --number-of-captures 300 --alignment-strategy chunk<CR>;
" Annotate marked lines
nmap <leader>n :%.!seeing_is_believing --timeout 12 --line-length 500 --number-of-captures 300 --alignment-strategy chunk --xmpfilter-style<CR>;
" Remove annotations
nmap <leader>c :%.!seeing_is_believing --clean<CR>;
" Mark the current line for annotation
nmap <leader>m A # => <Esc>
" Mark the highlighted lines for annotation
vmap <leader>m :norm A # => <Esc>
